# Another Using git guide

Fork this repository to your account
git clone https://gitlab.com/<YOURNAME>/lab-exercises.git
Change direcotry to the recently cloned directory, i.e. cd lab-exercises

git remote add upstream https://gitlab.com/CSUI-AdvProg-2017/lab-exercises.git
Tell us your GitLab username and URL to your tutorial repository


If there are updates from upstream:


git pull upstream master
Fix any merge conflict(s) that might arise (hopefully none)


Working on a tutorial problem set:



cd week_n where n is week number folder ID. E.g. week_2

git checkout -b lab-week-n
Do the exercises as instructed in its README.md file
Commit your work frequently
Write good commit message(s)
If your work is ready for grading: git push -u origin lab-week-n



If you want to know the detailed explanation about each instructions above,
please read the following sections.


Initial Setup


Create a fork of this repository to your GitLab account, which
will create a copy of this repository under your own account.
Open the forked repository page at
https://gitlab.com/<YOURNAME>/lab-exercises where <YOURNAME>
is your GitLab username.
Set the clone URL to HTTPS and copy the URL into clipboard.
Clone the repository into your local machine. The Git command:
git clone https://gitlab.com/<YOURNAME>/lab-exercises.git <PATH>
where <PATH> is a path to a directory in your local machine.
Go to the directory where the cloned repository is located in your
local machine.
Add new remote called upstream that points to the original
GitLab repository. The Git command: git remote add upstream https://gitlab.com/CSUI-AdvProg-2017/lab-exercises.git

Tell your TA about your GitLab username and URL to your tutorial
repository so s/he can grade it later.
Ensure that your repository page has visibility level set to
Internal or Public. Check it in Edit Project menu at
your repository page.



Doing the Tutorial


Suppose that you want to work on week 1 problem set. Go to the
directory that containing week 1 problem, i.e. week_1.
To ensure your work regarding week 1 problem is isolated from
your other attempts at other problems, create a new branch
specifically for working on week 1 problem. The Git command:
git checkout -b lab-week-1

Read the README file in week_1 directory. It contains set of
mandatory and optional tasks that you can work on.
Do the tutorial.
Use git add or git rm to stage/unstage files that you want to
save into Git later.
Once you want to save your progress, commit your work to Git. The
Git command: git commit A text editor will apear where you should
write a commit message. Please try to follow the guidelines written
in this guide on how to
write a good commit message.
Repeat steps 4 - 6 until you finished the tutorial.
Once you are ready to submit your work or you want to save it to
your repository on GitLab, do a Git push. The Git command: 
git push -u origin lab-week-1




Pulling Updates From Upstream

If there are any updates from upstream, you can get the latest commits
and integrate it into your fork by using the following Git command:
git pull upstream master
